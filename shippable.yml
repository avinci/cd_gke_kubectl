resources:
# REPO of kube configs
  - name: config_repo
    type: gitRepo
    integration: "demo_gh"
    versionTemplate:
      sourceName: "avinci/cd_gke_kubectl"
      branch: master

# gcloud CLI Config
  - name: gcp_cli
    type: cliConfig
    integration: "dr_avi"
    versionTemplate:
      region: "us-west1-a"

# GKE cluster info
  - name: dev_cluster
    type: cluster
    integration: "dr_avi"
    pointer:
      sourceName: "cluster"
      region: "us-west1-a"

  - name: prod_cluster
    type: cluster
    integration: "dr_avi"
    pointer:
      sourceName: "cluster"
      region: "us-west1-a"

jobs:
  - name: test_kctl
    type: runSh
    steps:
      - IN: node_app_img_dh
      - IN: gcp_cli
        switch: off
      - IN: dev_cluster
        switch: off
      - IN: prod_cluster
        switch: off
      - IN: config_repo
        switch: off
      - TASK:
          name: test
          runtime:
            options:
              env:
                - APP_LABEL: "test-app"
          script:
            - gcloud projects list
            - export APP_IMG=$(shipctl get_resource_version_key node_app_img_dh sourceName)
            - export APP_TAG=$(shipctl get_resource_version_key node_app_img_dh versionName)
            - export PROJECT="shipbeta"
            - export CLUSTER_RES="dev_cluster"
            - if [[ $APP_TAG = *"master"* ]]; then
              export PROJECT="devops-recipes"
              fi
            - if [[ $APP_TAG = *"master"* ]]; then export CLUSTER_RES="prod_cluster" fi
            #- export CLUST=$(shipctl get_resource_version_key $CLUSTER_RES sourceName)
            #- export CLUST_REG=$(shipctl get_resource_version_key $CLUSTER_RES region)
            - echo $CLUSTER_RES
            # - gcloud config set project $PROJECT
#            - gcloud container clusters get-credentials $CLUST --zone $CLUST_REG
#            - kubectl delete  -f ./appDeploy.yml 2>/dev/null || echo ""
#            - kubectl delete -f ./appSvc.yml  2>/dev/null || echo ""
#            - kubectl create -o json -f ./appDeploy.yml >> kube_output.json
#            - kubectl create -o json -f ./appSvc.yml >> kube_output.json
#            - cat kube_output.json
            - popd
